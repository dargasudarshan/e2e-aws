#!/bin/bash
set -x

#################
## ENVIRONMENT ##
#################

run_id="cstor"; test_name=$(${utils_path}/generate_test_name testcase=node-failure-drain metadata=${run_id})
 
###################
## DEPENDENCIES  ##
###################

observer_node=$(${utils_path}/setup_dependencies litmus-test)

wget https://raw.githubusercontent.com/openebs/litmus/004cc2e797f910783975939007aaa919f5c1df5a/apps/percona/chaos/drain_node/run_litmus_test.yml
cp run_litmus_test.yml run_test.yml

############################
## LITMUS PRECONDITIONING ##
############################

## TODO: Better way/logic to replace job ENV (SC, PVC, LABEL, NS) based on run instance intent (CLI) 
## TODO: Add logic to add ENV for run_instance_metadata/RunID

: << EOF
  ---------------------------------------------------------------------------------------
 | specAttribute        | kind	   | jiva       	| cStor-sparse  	         |
  ---------------------------------------------------------------------------------------
 | litmusJobLabel       | jobSpec  | node-failure-drain | node-failure-drain-cstor       |
 | appNamespace         | env	   | app-percona-ns     | percona-cstor                  |
 | runID		| env(add) | 	-		| cstor                          |
 | livenessLabel        | env      | liveness=node-chaos| liveness=percona-liveness-cstor|
  ------------------------------------------------------------------------------------
EOF

#cp apps/percona/deployers/run_litmus_test.yml run_test.yml

sed -i -e 's/name: node-failure-drain/name: node-failure-drain-cstor/g' \
-e 's/value: app-percona-ns/value: percona-cstor/g' \
-e 's/liveness=node-chaos/liveness=percona-liveness-cstor/g' \
-e 's/"run"/"infra-aid"/g' \
-e 's/"litmuspod"/"observer"/g' run_test.yml

sed -i -e "s/test-node/${observer_node}/g" run_test.yml

#temp
sed -i -e 's|openebs/ansible-runner:ci|dargas/ansible-runner:drain|g' run_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"${run_id}"'\
' run_test.yml


#################
## PRE-CHECKS  ##
#################

echo "Running cluster & test-infra health check before chaos"
${utils_path}/cluster_health_check component='test-infra'

#################
## RUNNER MAIN ##
#################

echo "Running the litmus test.."
${utils_path}/litmus_job_runner label='name:node-failure-drain-cstor' job=run_test.yml
${utils_path}/task_delimiter;

echo "Dumping state of cluster post job run"; echo ""
${utils_path}/dump_cluster_state;
${utils_path}/task_delimiter;

#################
## GET RESULT  ##
#################

## Check the test status & result from the litmus result custom resource
${utils_path}/get_litmus_result ${test_name}

